#!/sbin/sh
#
# ATTENTION: This file is managed in puppet.  Local changes will be discarded.
#

# 
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
# 
# Copyright 2009 Sun Microsystems, Inc. All rights reserved. 
# 
# The contents of this file are subject to the terms of the Common
# Development and Distribution License("CDDL") (the "License").  You
# may not use this file except in  compliance with the License. 
# 
# You can obtain a copy of the License at 
# http://opensolaris.org/os/project/webstack/license/
# or legal/license.txt.  See the License for the 
# specific language governing permissions and limitations under the License.  
# 
# When distributing the Covered Code, include this CDDL Header Notice 
# in each file and include the License file at legal/licensev1.0.txt.  
# If applicable, add the following below this CDDL Header, with the 
# fields enclosed by brackets [] replaced by your own identifying 
# information: "Portions Copyrighted [year] [name of copyright owner]"
# 


. /lib/svc/share/smf_include.sh

# SMF_FMRI is the name of the target service. This allows multiple instances 
# to use the same script.

getproparg() {
    val=`svcprop -p $1 $SMF_FMRI`
    [ -n "$val" ] && echo $val
}

MYSQL_BIN=`getproparg mysql/bin`
MYSQL_DEFAULTS=`getproparg mysql/defaults`


if [ -z $SMF_FMRI ]; then
    echo "SMF framework variables are not initialized."
    exit $SMF_EXIT_ERR
fi

if [ ! -f ${MYSQL_DEFAULTS} ] ; then
    echo "Configuration file ${MYSQL_DEFAULTS} doesn't exist"
    exit $SMF_EXIT_ERR_FATAL
fi

# We want to use the multi threaded malloc by default
LD_PRELOAD_64=/usr/lib/amd64/libmtmalloc.so
export LD_PRELOAD_64

# Set the data variable
MYSQL_DATA_DIR=`/usr/bin/grep \^datadir ${MYSQL_DEFAULTS} | /usr/bin/sed -e 's/^[^=]*=//'`

# Make sure we got a valid variable for datadir
if [ ! -d ${MYSQL_DATA_DIR} ] ; then
    echo "Mysql datadir does not exist at ${MYSQL_DATA_DIR}"
    exit $SMF_EXIT_ERR_FATAL
fi

# Set the pid variable
MYSQL_PID_FILE="${MYSQL_DATA_DIR}/mysql.pid"

# Add decision here about defaults/no-defaults

mysql_start() {

    # If the mysql database has not been created yet then let's initialize
    # the database.  This is typically only done on the first execution of
    # this script.
    if [ ! -d ${MYSQL_DATA_DIR}/mysql ] ; then
        echo "running msyql_install_db"

        MYSQL_ROOT_DIR=`dirname ${MYSQL_BIN}`
        cd ${MYSQL_ROOT_DIR}
        ./scripts/mysql_install_db --defaults-file=${MYSQL_DEFAULTS}
    fi

    ${MYSQL_BIN}/mysqld_safe --defaults-file=${MYSQL_DEFAULTS}  > /dev/null &
}

mysql_stop() {
    
    # We cannot use the shell builtin here because it will never evaluate
    # to true.  So we must use the test binary
    if /usr/bin/test -f ${MYSQL_PID_FILE} ; then

       /bin/kill `/bin/cat ${MYSQL_PID_FILE}`
    fi
}

case "$1" in
'start')
    mysql_start || exit $SMF_EXIT_ERR_FATAL
    ;;
'stop')
    mysql_stop || exit $SMF_EXIT_ERR_FATAL
    ;;
'restart')
    mysql_stop
    mysql_start || exit $SMF_EXIT_ERR_FATAL
    ;;
*)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac

exit $SMF_EXIT_OK
